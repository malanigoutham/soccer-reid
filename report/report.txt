# üìä Project Report ‚Äì Soccer Player Re-Identification

**Name:** MALANI GOUTHAM
**Role:** AI Intern  
**Company:** Liat.ai  
**Task Option:** Soccer Player Detection and Re-Identification

---

## üîç Approach and Methodology

- **YOLOv8 Object Detection**:  
  Used the Ultralytics YOLO model to detect players, ball, and referees in each video frame.

- **DeepSORT Tracking**:  
  Implemented DeepSORT for tracking players across frames using bounding boxes and re-identification embeddings.

- **Video Processing**:  
  OpenCV was used to process and display each frame, draw detections, and export a video of tracked players.

---

## üß™ Techniques Tried

- Tested YOLO with different confidence thresholds for optimal performance.
- Explored DeepSORT parameters (e.g., `max_age`, `n_init`) to improve ID consistency.
- Evaluated object detection results frame-by-frame with overlayed bounding boxes and IDs.

---

## ‚ö†Ô∏è Challenges Encountered

- **Large File Handling**: YOLOv11 model and `venv` files exceeded GitHub size limits.
- **Dependency Conflicts**: Resolved environment issues between OpenCV, Torch, and DeepSORT.
- **Realtime Performance**: Inference times were high on CPU, affecting smooth playback.

---

## üîß Incomplete / Future Work

- Would like to improve ID consistency during occlusion.
- Plan to fine-tune YOLOv8 for sports-specific re-identification.
- Could integrate a GUI to display analytics like ball possession and player stats.

---

## ‚úÖ Status

- Project setup and tracking pipeline completed.
- GitHub repository submitted.
- README, `.gitignore`, and requirements fully documented.

